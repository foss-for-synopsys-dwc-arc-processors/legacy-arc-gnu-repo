CROSS_LIBGCC1 = libgcc1-asm.a
LIB1ASMSRC = arc/lib1funcs.asm
LIB1ASMFUNCS = _mulsi3 _umulsidi3 _udivsi3 _divsi3 _umodsi3 _modsi3 \
  _divmod_tools _clzsi2 _millicodethunk \
  _adddf3 _muldf3 _addsf3 _mulsf3 _divsf3 _divdf3 _truncdfsf2 _extendsfdf2 \
  _eqdf2 _eqsf2 _gedf2 _gesf2 _gtdf2 _gtsf2 _uneqdf2 _uneqsf2 _ordsf2 _orddf2 \
  _fixdfsi _fixsfsi _floatsidf _floatsisf _fixunsdfsi _floatunsidf

#LIBGCC2_CFLAGS = -g1 -O2 $(LIBGCC2_INCLUDES) $(GCC_CFLAGS)

# These are really part of libgcc1, but this will cause them to be
# built correctly, so...

LIB2FUNCS_EXTRA = fp-bit.c dp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#ifndef __big_endian__' > dp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> dp-bit.c
	echo '#endif' >> dp-bit.c
	echo '#include "config/arc/dp-hack.h"' >> dp-bit.c
	cat $(srcdir)/config/fp-bit.c >> dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	echo '#ifndef __big_endian__' >> fp-bit.c
	echo '#define FLOAT_BIT_ORDER_MISMATCH' >> fp-bit.c
	echo '#endif' >> fp-bit.c
	echo '#include "config/arc/fp-hack.h"' >> fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

# .init/.fini section routines

$(T)crti.o: $(srcdir)/config/arc/crti.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $@  -x assembler-with-cpp $<

$(T)crtn.o: $(srcdir)/config/arc/crtn.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $@  -x assembler-with-cpp $<

$(T)crtg.o: $(srcdir)/config/arc/crtg.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $@  -x assembler-with-cpp $<

$(T)crtgend.o: $(srcdir)/config/arc/crtgend.asm $(GCC_PASSES)
	$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(MULTILIB_CFLAGS) $(INCLUDES) \
	-c -o $@  -x assembler-with-cpp $<

$(T)mcount.o: $(srcdir)/config/arc/gmon/mcount.c $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $< \
	-fcall-saved-r0 -fcall-saved-r1 -fcall-saved-r2 -fcall-saved-r3 \
	-fcall-saved-r4 -fcall-saved-r5 -fcall-saved-r6 -fcall-saved-r7 \
	-fomit-frame-pointer

$(T)gmon.o: $(srcdir)/config/arc/gmon/gmon.c $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) -mno-sdata $(INCLUDES) -c -o $@ $< \
	-Wno-extra # suppress inane warning about missing initializer.
	# Adding initializers for the remaining elements of gmonparam would
	# make the code more brittle.

$(T)prof-freq-stub.o: $(srcdir)/config/arc/gmon/prof-freq-stub.S $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $<

$(T)prof-freq.o: $(srcdir)/config/arc/gmon/prof-freq.c $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $<

$(T)dcache_linesz.o: $(srcdir)/config/arc/gmon/dcache_linesz.S $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $<

$(T)profil.o: $(srcdir)/config/arc/gmon/profil.S $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $<

$(T)profil-uclibc.o: $(srcdir)/config/arc/gmon/profil-uclibc.c $(GCC_PASSES)
	$(GCC_FOR_TARGET) -isystem $(srcdir)/config/arc/gmon $(GCC_CFLAGS) \
	$(MULTILIB_CFLAGS) $(INCLUDES) -c -o $@ $<

$(T)libgmon.a: $(T)mcount.o $(T)gmon.o $(T)dcache_linesz.o $(PROFILE_OSDEP)
	$(AR_CREATE_FOR_TARGET) $@ $^

EXTRA_MULTILIB_PARTS = crtend.o crtbegin.o crtendS.o crtbeginS.o crti.o crtn.o libgmon.a crtg.o crtgend.o
